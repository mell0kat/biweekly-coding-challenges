const reverse = require('lodash/reverse')
/*

Day 5: Sunny with a Chance of Asteroids

*/

/*

Mode 0 - position mode
Mode 1 - immediate mode (parameter is interpreted as value)

*/

const interpretInstructions = instructionValue => {
  const opcode = instructionValue.toString().slice(-2)
  const parameterCodes = reverse(
    instructionValue
      .toString()
      .slice(0, -2)
      .split('')
  )
  return {
    opcode,
    parameterCodes,
  }
}

/*

Test interpretInstructions

console.log('interpretInstructions 1', interpretInstructions(1101)) // { opcode: 1, parameterCodes: [ '1', '1' ] }
console.log('interpretInstructions 2', interpretInstructions(1002)) // { opcode: 2, parameterCodes: [ '0', '1' ] }
console.log('interpretInstructions 3', interpretInstructions(11099)) // { opcode: 99, parameterCodes: [ '0', '1', '1' ] }

*/

const applyParameterMode = (inputArray, inputValue, parameterMode) => {
  // 0 or undefined
  if (!parameterMode) {
    return inputArray[inputValue]
  } else if (parameterMode === 1) {
    return inputValue
  } else {
    throw new Error(`Cannot interpret parameterMode of ${parameterMode}`)
  }
}

const OPCODES = {
  ADD: 1,
  MULTIPLY: 2,
  SAVE_INPUT: 3,
  RETURN_OUTPUT: 4,
  HALT: 99,
}

const restoreIntcode = (inputArray, inputValue) => {
  const instructions = inputArray.slice()
  let i = 0
  let opcode = '00'
  while (opcode !== '99') {
    const { opcode, parameterCodes } = interpretInstructions(instructions[i])

    console.log(opcode, parameterCodes)

    const valueAt1 = instructions[i + 1]
    const valueAt2 = instructions[i + 2]
    const valueAt3 = instructions[i + 3]

    const value1 = applyParameterMode(
      instructions,
      valueAt1,
      +parameterCodes[0]
    )

    const value2 = applyParameterMode(
      instructions,
      valueAt2,
      +parameterCodes[1]
    )

    switch (+opcode) {
      case OPCODES.ADD:
        const sum = value1 + value2
        instructions[valueAt3] = sum
        i += 4
        break
      case OPCODES.MULTIPLY:
        const product = value1 * value2
        instructions[valueAt3] = product
        i += 4
        break
      case OPCODES.SAVE_INPUT:
        instructions[valueAt1] = inputValue
        i += 2
        break
      case OPCODES.RETURN_OUTPUT:
        console.log(`Output is ${output}`)
      default:
        console.log(`Opcode not handled: ${opcode}`)
    }
  }
  return instructions[0]
}

console.log(restoreIntcode([3, 0, 4, 0, 99], 4) === 4)
console.log(restoreIntcode([3, 0, 4, 0, 99], 14) === 14)
console.log(restoreIntcode([3, 0, 4, 0, 99], 75) === 75)

const puzzleInput = [
  3,
  225,
  1,
  225,
  6,
  6,
  1100,
  1,
  238,
  225,
  104,
  0,
  1101,
  40,
  27,
  224,
  101,
  -67,
  224,
  224,
  4,
  224,
  1002,
  223,
  8,
  223,
  1001,
  224,
  2,
  224,
  1,
  224,
  223,
  223,
  1101,
  33,
  38,
  225,
  1102,
  84,
  60,
  225,
  1101,
  65,
  62,
  225,
  1002,
  36,
  13,
  224,
  1001,
  224,
  -494,
  224,
  4,
  224,
  1002,
  223,
  8,
  223,
  1001,
  224,
  3,
  224,
  1,
  223,
  224,
  223,
  1102,
  86,
  5,
  224,
  101,
  -430,
  224,
  224,
  4,
  224,
  1002,
  223,
  8,
  223,
  101,
  6,
  224,
  224,
  1,
  223,
  224,
  223,
  1102,
  23,
  50,
  225,
  1001,
  44,
  10,
  224,
  101,
  -72,
  224,
  224,
  4,
  224,
  102,
  8,
  223,
  223,
  101,
  1,
  224,
  224,
  1,
  224,
  223,
  223,
  102,
  47,
  217,
  224,
  1001,
  224,
  -2303,
  224,
  4,
  224,
  102,
  8,
  223,
  223,
  101,
  2,
  224,
  224,
  1,
  223,
  224,
  223,
  1102,
  71,
  84,
  225,
  101,
  91,
  40,
  224,
  1001,
  224,
  -151,
  224,
  4,
  224,
  1002,
  223,
  8,
  223,
  1001,
  224,
  5,
  224,
  1,
  223,
  224,
  223,
  1101,
  87,
  91,
  225,
  1102,
  71,
  19,
  225,
  1,
  92,
  140,
  224,
  101,
  -134,
  224,
  224,
  4,
  224,
  1002,
  223,
  8,
  223,
  101,
  1,
  224,
  224,
  1,
  224,
  223,
  223,
  2,
  170,
  165,
  224,
  1001,
  224,
  -1653,
  224,
  4,
  224,
  1002,
  223,
  8,
  223,
  101,
  5,
  224,
  224,
  1,
  223,
  224,
  223,
  1101,
  49,
  32,
  225,
  4,
  223,
  99,
  0,
  0,
  0,
  677,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1105,
  0,
  99999,
  1105,
  227,
  247,
  1105,
  1,
  99999,
  1005,
  227,
  99999,
  1005,
  0,
  256,
  1105,
  1,
  99999,
  1106,
  227,
  99999,
  1106,
  0,
  265,
  1105,
  1,
  99999,
  1006,
  0,
  99999,
  1006,
  227,
  274,
  1105,
  1,
  99999,
  1105,
  1,
  280,
  1105,
  1,
  99999,
  1,
  225,
  225,
  225,
  1101,
  294,
  0,
  0,
  105,
  1,
  0,
  1105,
  1,
  99999,
  1106,
  0,
  300,
  1105,
  1,
  99999,
  1,
  225,
  225,
  225,
  1101,
  314,
  0,
  0,
  106,
  0,
  0,
  1105,
  1,
  99999,
  1107,
  226,
  677,
  224,
  1002,
  223,
  2,
  223,
  1006,
  224,
  329,
  101,
  1,
  223,
  223,
  8,
  226,
  226,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  344,
  101,
  1,
  223,
  223,
  1007,
  677,
  226,
  224,
  102,
  2,
  223,
  223,
  1005,
  224,
  359,
  101,
  1,
  223,
  223,
  8,
  226,
  677,
  224,
  102,
  2,
  223,
  223,
  1005,
  224,
  374,
  101,
  1,
  223,
  223,
  1107,
  677,
  677,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  389,
  1001,
  223,
  1,
  223,
  108,
  226,
  677,
  224,
  102,
  2,
  223,
  223,
  1005,
  224,
  404,
  1001,
  223,
  1,
  223,
  108,
  677,
  677,
  224,
  1002,
  223,
  2,
  223,
  1006,
  224,
  419,
  101,
  1,
  223,
  223,
  107,
  677,
  677,
  224,
  102,
  2,
  223,
  223,
  1006,
  224,
  434,
  101,
  1,
  223,
  223,
  108,
  226,
  226,
  224,
  1002,
  223,
  2,
  223,
  1006,
  224,
  449,
  1001,
  223,
  1,
  223,
  8,
  677,
  226,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  464,
  101,
  1,
  223,
  223,
  1108,
  226,
  677,
  224,
  1002,
  223,
  2,
  223,
  1006,
  224,
  479,
  1001,
  223,
  1,
  223,
  1108,
  677,
  677,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  494,
  101,
  1,
  223,
  223,
  7,
  677,
  677,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  509,
  101,
  1,
  223,
  223,
  1007,
  677,
  677,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  524,
  101,
  1,
  223,
  223,
  7,
  677,
  226,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  539,
  101,
  1,
  223,
  223,
  1107,
  677,
  226,
  224,
  102,
  2,
  223,
  223,
  1006,
  224,
  554,
  101,
  1,
  223,
  223,
  107,
  226,
  677,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  569,
  101,
  1,
  223,
  223,
  107,
  226,
  226,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  584,
  101,
  1,
  223,
  223,
  1108,
  677,
  226,
  224,
  102,
  2,
  223,
  223,
  1006,
  224,
  599,
  1001,
  223,
  1,
  223,
  1008,
  677,
  677,
  224,
  102,
  2,
  223,
  223,
  1006,
  224,
  614,
  101,
  1,
  223,
  223,
  7,
  226,
  677,
  224,
  102,
  2,
  223,
  223,
  1005,
  224,
  629,
  101,
  1,
  223,
  223,
  1008,
  226,
  677,
  224,
  1002,
  223,
  2,
  223,
  1006,
  224,
  644,
  101,
  1,
  223,
  223,
  1007,
  226,
  226,
  224,
  1002,
  223,
  2,
  223,
  1005,
  224,
  659,
  1001,
  223,
  1,
  223,
  1008,
  226,
  226,
  224,
  102,
  2,
  223,
  223,
  1006,
  224,
  674,
  1001,
  223,
  1,
  223,
  4,
  223,
  99,
  226,
]
const output = restoreIntcode(puzzleInput, 1)
console.log('OUTPUT', output)
